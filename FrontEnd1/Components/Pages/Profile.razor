@rendermode InteractiveServer
@page "/profile"

@using Blazored.SessionStorage
@using FrontEnd1.Components.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.VisualBasic
@inject NavigationManager Navigation
@* @implements IAsyncDisposable *@
@inject IJSRuntime JS;
@inject ISessionStorageService sessionStorage;

@if (_token is not null)
{
    <span>Welcome @Email<button type="button" @onclick="LogOutAsync">LogOut</button></span>
    <PageTitle>Profile</PageTitle>
    errorMessage = null;
}

@if (errorMessage is not null)
{
    <h3>You are not signed in</h3>
    RedirectToLoginPage();
}

@inject ISessionStorageService sessionStorage;
@inject IAuthenticationService authservice;

@code {
    private const string JWT_Key = nameof(JWT_Key);
    public const string User = nameof(User);
    public string _token;
    public string? errorMessage;
    private string Email;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Email = await sessionStorage.GetItemAsync<string>(User);
            _token = await sessionStorage.GetItemAsync<string>(JWT_Key);
            StateHasChanged();
        }
    }

    private async Task LogOutAsync()
    {
        await authservice.LogoutAsync();
    }

    private async Task RedirectToLoginPage()
    {
        Navigation.NavigateTo("/login");
    }
}